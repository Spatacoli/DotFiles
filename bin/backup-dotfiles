#!/bin/bash

# Git Update File contains:
# - DWM
# - Systemd
# - .bashrc, .vimrc, .Xresources, .xinitrc
# - local bin folder
# - local fonts folder
# - common customized etc files
# - fancy MARKDOWN file

SF=$(pwd)
P=$HOME/.archrepo
SYSD_FILES=()

# get root
sudo -v 

# switch to git repo to use git cmds
cd $P && echo "Switching to git repository folder"

if [[ $1 == "clean" ]]; then
    # FIXME: does not cleanup properly
    git rm -r *
    git rm *
    git commit -m "clean git repo"
    echo "![ArchLinux](https://www.archlinux.org/static/logos/archlinux-logo-black-scalable.svg)" > README.md
    git add README.md
    git commit -m "add README"
    git push
    cd $SF
    exit 0
fi

cp $HOME/.xinitrc       ./.xinitrc
git add ./.xinitrc
git commit -m "update .xinitrc"

cp $HOME/.vimrc         ./.vimrc
git add ./.vimrc
git commit -m "update .vimrc"

cp $HOME/.Xresources    ./.Xresources
git add ./.Xresources
git commit -m "update .Xresources"

cp $HOME/.bashrc        ./.bashrc
git add ./.bashrc
git commit -m "update .bashrc"

cp -r $HOME/bin         ./
git add ./bin
git commit -m "update local binaries"

cp $HOME/.ssh/config    ./.ssh/config
git add ./.ssh/config
git commit -m "update SSH config"

cp $HOME/.gitconfig   ./.gitconfig
git add ./.gitconfig
git commit -m "update gitconfig"

cp $HOME/.gitignore   ./.gitignore
git add ./.gitignore
git commit -m "update gitignroe"

cp $HOME/.conkyrc ./.conkyrc
git add ./.conkyrc
git commit -m "update conky config"

# create local .config dir if non-existent
[[ ! -d ./.config ]] && mkdir ./.config && echo "Creating new local .config folder for git..."
cp $HOME/.config/archey3.cfg ./.config/archey3.cfg
git add ./.config/archey3.cfg
git commit -m "update archey config file"

# create local etc dir if non-existent
[[ ! -d ./etc ]] && mkdir ./etc && echo "Creating new local etc folder for git..."

[[ ! -d ./etc/default ]] && mkdir ./etc/default && echo "Creating new local etc/default folder for git..."
cp /etc/default/grub    ./etc/default/grub
git add ./etc/default/grub
git commit -m "update default grub config"

[[ ! -d ./etc/modules-load.d ]] && mkdir ./etc/modules-load.d
cp /etc/modules-load.d/modules.conf ./etc/modules-load.d/modules.conf
git add ./etc/modules-load.d/modules.conf
git commit -m "update modules config"

# create local etc/pm dir if non-existent
[[ ! -d ./etc/pm ]] && mkdir ./etc/pm && echo "Creating new local etc/pm folder for git..."

cp -r /etc/pm/power.d   ./etc/pm/
git add ./etc/pm/power.d
git commit -m "update pm-utils powersave scripts"

cp -r /etc/rules.d      ./etc/
git add ./etc/rules.d
git commit -m "update udev rules"

cp /etc/mkinitcpio.conf ./etc/mkinitcpio.conf
git add ./etc/mkinitcpio.conf
git commit -m "update mkinitcpio conf"

cp /etc/fstab           ./etc/fstab
git add ./etc/fstab
git commit -m "update filesystem table"

cp /etc/vconsole.conf   ./etc/vconsole.conf
git add ./etc/vconsole.conf
git commit -m "update virtual console config"

# create local etc/systemd dir if non-existent
[[ ! -d ./etc/systemd ]] && mkdir ./etc/systemd && echo "Creating new local etc/systemd folder for git..."

[[ ! -d ./etc/systemd/system ]] && mkdir ./etc/systemd/system && echo "Creating new local etc/systemd/system folder for git..."
for i in ${SYSD_FILES[@]}; do
    cp /etc/systemd/system/$i ./etc/systemd/system/$i
done
git add ./etc/systemd/system
git commit -m "update custom systemd files"

[[ ! -d ./.fonts ]] && mkdir ./.fonts && echo "Creating new local .fonts folder for git..."
cp -r $HOME/.fonts      ./
git add ./.fonts
git commit -m "update custom fonts"

[[ ! -d ./dwm ]] && mkdir ./dwm && echo "Creating new local dwm folder for git..."
cp $HOME/.dwm/config.h  ./dwm/config.h
git add ./dwm/config.h
git commit -m "update dwm config"

[[ ! -d ./dwm/patches ]] && mkdir ./dwm/patches && echo "Creating new local dwm/patches folder for git..."
cp -r $HOME/.dwm/patches ./dwm/
git add ./dwm/patches
git commit -m "update dwm patches"

git push
cd $SF
exit 0
